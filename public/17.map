{"version":3,"file":"17.chunk.js","sources":["webpack:///./~/rxjs/add/operator/do.js?191b****","webpack:///./~/rxjs/operator/do.js?a264****","webpack:///./src/app/customers/CustomerMeasurementForm.style.css","webpack:///./src/app/customers/CustomerMeasurementForm.template.html","webpack:///./src/app/customers/customerMeasurementForm.component.ts","webpack:///./src/app/customers/customerMeasurementForm.module.ts","webpack:///./src/models/measurement.ts","webpack:///./src/services/customer.Service.ts?80d1**","webpack:///./src/services/measurement.Service.ts","webpack:///./src/utilities/Server.ts?7466***"],"sourcesContent":["\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/do.js\n// module id = ./node_modules/rxjs/add/operator/do.js\n// module chunks = 1 9 11 13 16 17","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/do.js\n// module id = ./node_modules/rxjs/operator/do.js\n// module chunks = 1 9 11 13 16 17","module.exports = \".add-btn{\\r\\n    border:none;\\r\\n    height:46px;\\r\\n    padding:10px 2px;\\r\\n    min-width:250px;\\r\\n    margin:0 auto;\\r\\n  }\\r\\n\\r\\n  fieldset{\\r\\n    border: 1px solid #ccc;\\r\\n    padding: 10px;\\r\\n  }\\r\\n\\r\\n  legend{\\r\\n    color: black;\\r\\n    font-size: 22px;\\r\\n    border-bottom: none;\\r\\n    padding-left: 30px;\\r\\n  }\\r\\n\\r\\n  .common-form{\\r\\n    -webkit-box-shadow: 0 10px 6px -6px #777;\\r\\n\\t   -moz-box-shadow: 0 10px 6px -6px #777;\\r\\n\\t        box-shadow: 0 10px 6px -6px #777;\\r\\n  }\\r\\n\\r\\n  .row{\\r\\n    margin-top:20px;\\r\\n  }\\r\\n  .row-2{\\r\\n    margin-top:100px;\\r\\n  }\\r\\n\\r\\n  .measurementsType{\\r\\n    width:350px;\\r\\n    height:40px;\\r\\n    border:1px solid #ccc;\\r\\n    border-radius: 0;\\r\\n    padding-left:5px;\\r\\n    color:#555555;\\r\\n    padding:10px;\\r\\n    margin:25px auto;\\r\\n  }\\r\\n\\r\\n  .record-text{\\r\\n    margin:25px auto;\\r\\n    text-align: center;\\r\\n    columns: #222222;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n  /* The snackbar - position it at the bottom and in the middle of the screen */\\r\\n#snackbar {\\r\\n  visibility: hidden; /* Hidden by default. Visible on click */\\r\\n  min-width: 250px; /* Set a default minimum width */\\r\\n  margin-left: -125px; /* Divide value of min-width by 2 */\\r\\n  background-color: #333; /* Black background color */\\r\\n  color: #fff; /* White text color */\\r\\n  text-align: center; /* Centered text */\\r\\n  border-radius: 2px; /* Rounded borders */\\r\\n  padding: 16px; /* Padding */\\r\\n  position: fixed; /* Sit on top of the screen */\\r\\n  z-index: 1; /* Add a z-index if needed */\\r\\n  left: 50%; /* Center the snackbar */\\r\\n  bottom: 30px; /* 30px from the bottom */\\r\\n}\\r\\n\\r\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\r\\n#snackbar.show {\\r\\n  visibility: visible; /* Show the snackbar */\\r\\n\\r\\n/* Add animation: Take 0.5 seconds to fade in and out the snackbar. \\r\\nHowever, delay the fade out process for 2.5 seconds */\\r\\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\\r\\n  animation: fadein 0.5s, fadeout 0.5s 2.5s;\\r\\n}\\r\\n\\r\\n/* Animations to fade the snackbar in and out */\\r\\n@-webkit-keyframes fadein {\\r\\n  from {bottom: 0; opacity: 0;} \\r\\n  to {bottom: 30px; opacity: 1;}\\r\\n}\\r\\n\\r\\n@keyframes fadein {\\r\\n  from {bottom: 0; opacity: 0;}\\r\\n  to {bottom: 30px; opacity: 1;}\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fadeout {\\r\\n  from {bottom: 30px; opacity: 1;} \\r\\n  to {bottom: 0; opacity: 0;}\\r\\n}\\r\\n\\r\\n@keyframes fadeout {\\r\\n  from {bottom: 30px; opacity: 1;}\\r\\n  to {bottom: 0; opacity: 0;}\\r\\n}\\r\\n\\r\\n#selectType{\\r\\n  display:none;\\r\\n  text-align: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customers/CustomerMeasurementForm.style.css\n// module id = ./src/app/customers/CustomerMeasurementForm.style.css\n// module chunks = 17","module.exports = \"<h1>Add Measurement Form</h1>\\r\\n<div id=\\\"snackbar\\\"></div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 col-lg-6 col-sm-6 offset-lg-3 offset-md-3 offset-sm-3 common-form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Contact Number</label>\\r\\n\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CustomerContactNumber\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n          placeholder=\\\"Please Enter Customer Contact Number\\\">\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button (click)=\\\"search()\\\" class=\\\"btn btn-primary\\\">Search</button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <select (change)=\\\"onChange($event.target.value)\\\">\\r\\n          <option disabled selected>Select Customers</option>\\r\\n          <option *ngFor='let customer of customers' value={{customer._id}}>\\r\\n            {{customer.FullName}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" id=\\\"selectType\\\">\\r\\n        <h1 class=\\\"record-text\\\">Record Measurements for:</h1>\\r\\n          <select class=\\\"measurementsType\\\" (change)=\\\"getForms($event.target.value)\\\">\\r\\n            <option disabled selected>Select Option</option>\\r\\n            <option value=\\\"Shalwar Kameez\\\">Shalwar Kameez</option>\\r\\n            <option value=\\\"Coat\\\">Coat</option>\\r\\n            <option value=\\\"Sherwani\\\">Sherwani</option>\\r\\n            <option value=\\\"Waist Coat\\\">Waist Coat</option>\\r\\n            <option value=\\\"Pant\\\">Pant</option>\\r\\n            <option value=\\\"Trouser\\\">Trouser</option>\\r\\n\\r\\n          </select>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row row-2\\\">\\r\\n\\r\\n    <div class=\\\"col-md-6 col-lg-6 col-sm-6 offset-md-3 offset-sm-3 offset-lg-3 col-xs-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"ShalwarKameez\\\">\\r\\n        <!-- Shalwar Kameez Div -->\\r\\n\\r\\n        <fieldset>\\r\\n\\r\\n          <legend>Shalwar Kameez</legend>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Kameez Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Kameez Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Kameez Chest</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezChest\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Kameez Chest\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Sleeve Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezSleeve\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Sleeve Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Shoulder Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezShoulder\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Kameez Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shalwar Neck Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezNeck\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Neck Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Biceps Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezBysep\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Biceps Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter S. Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezSLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shalwar Kameez Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Bottom</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.ShalwarKameezBottom\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Bottom\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div>\\r\\n      <!-- Shalwar Kameez div  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"Coat\\\"> \\r\\n        <!-- Coat -div -->\\r\\n\\r\\n        <fieldset>\\r\\n\\r\\n          <legend>Coat</legend>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Coat Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Coat Chest</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatChest\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Chest\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter coat Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter coat Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sleeve Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatSleeve\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Sleeve Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shoulder Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatShoulder\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shoulder Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Neck Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatNeck\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Neck Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n        \\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Biceps Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatBysep\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Biceps Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter H.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatHB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please H.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter C.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatCB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter C.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div>\\r\\n      <!-- Coat div  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"Sherwani\\\">\\r\\n\\r\\n        <fieldset>\\r\\n          <!-- Sherwani div  -->\\r\\n\\r\\n          <legend>Sherwani</legend>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sherwani Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sherwani Chest</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniChest\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Chest\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sherwani Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter coat Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sleeve Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniSleeve\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Sleeve Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shoulder Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniShoulder\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shoulder Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Neck Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniNeck\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Neck Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Biceps Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniBysep\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Biceps Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Sherwani H.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniHB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please H.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter C.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.SherwaniCB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter C.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div>\\r\\n      <!-- sherwani div  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"WaistCoat\\\">\\r\\n\\r\\n        <fieldset>\\r\\n          <!-- waist coat div  -->\\r\\n\\r\\n          <legend>Waist Coat</legend>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Coat Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Coat Chest</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatChest\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Coat Chest\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter coat Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter coat Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Shoulder Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatShoulder\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Shoulder Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Neck Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatNeck\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Neck Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter H.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatHB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please H.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter C.B</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.CoatCB\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter C.B\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div>\\r\\n      <!-- waist coat div  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"Pant\\\">\\r\\n        <!-- pants div  -->\\r\\n\\r\\n        <fieldset>\\r\\n\\r\\n          <legend>Pant</legend>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Pant Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Pant Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Pant Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Pant Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Knee Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentKnee\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Knee Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Bottom</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentBottom\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Bottom\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Inside</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.PentInside\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Inside\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div>\\r\\n      <!-- pants div  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"shalwar\\\" *ngIf=\\\"Trouser\\\"><!-- Trouser div  -->\\r\\n\\r\\n        <fieldset>\\r\\n\\r\\n          <legend>Trouser</legend>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Trouser Waist</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserWaist\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Pant Waist\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Hip Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserHip\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Hip Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Trouser Length</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserLength\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Pant Length\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Knee Measurement</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserKnee\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Knee Measurement\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Trouser Bottom</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserBottom\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Bottom\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"normal-field\\\" class=\\\"col-form-label\\\">Enter Trouser Inside</label>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newMeasurement.TrouserInside\\\" id=\\\"normal-field\\\" class=\\\"form-control custom-inputs\\\"\\r\\n              placeholder=\\\"Please Enter Inside\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <button (click)=\\\"addMeasurement()\\\" class=\\\"btn btn-success add-btn\\\">Add Measurement</button>\\r\\n\\r\\n        </fieldset>\\r\\n\\r\\n      </div><!-- Trouser div  -->\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customers/CustomerMeasurementForm.template.html\n// module id = ./src/app/customers/CustomerMeasurementForm.template.html\n// module chunks = 17","import { Component } from '@angular/core';\r\nimport { Customer } from './../../models/customer';\r\nimport { Measurement } from './../../models/measurement';\r\nimport { CustomerService } from './../../services/customer.Service';\r\nimport { MeasurementService } from './../../services/measurement.Service';\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n    selector: 'customerMeasurement-form',\r\n    template: require('./CustomerMeasurementForm.template.html'),\r\n    styles:[require('./CustomerMeasurementForm.style.css')],\r\n    providers:[CustomerService,MeasurementService]\r\n})\r\n\r\nexport class CustomerMeasurementForm {\r\n    constructor(private _measurementService: MeasurementService,\r\n         private _customerService: CustomerService) \r\n         {\r\n    }\r\n    \r\n    public newMeasurement;\r\n    public customers: Customer[];\r\n\r\n\r\n    public ShalwarKameez:boolean = false;\r\n    public Coat:boolean = false;\r\n    public Sherwani:boolean = false\r\n    public WaistCoat:boolean = false\r\n    public Pant:boolean = false\r\n    public Trouser:boolean = false\r\n\r\n    addMeasurement(): void {\r\n        console.log(this.newMeasurement);\r\n        this._measurementService.addMeasurement(this.newMeasurement).subscribe(res => {\r\n            console.log(res);\r\n            if(res.code == 200){\r\n                $(\"#snackbar\").html(\"Values Saved!\");\r\n                this.showToast();\r\n                this.newMeasurement = new Measurement();\r\n                $(\"#selectType\").hide();\r\n                this.allFalse();\r\n            }else{ \r\n                 $(\"#snackbar\").html(res.message);\r\n                this.showToast();\r\n            }\r\n        });\r\n    }\r\n\r\n    search(): void {\r\n        this._customerService.getCustomersByContactNumber(this.newMeasurement.CustomerContactNumber).subscribe(res=> {\r\n            if(res.code==200)\r\n            {\r\n                this.customers = res.data;\r\n            }\r\n            else\r\n            {\r\n                this.customers=null;\r\n            }\r\n            console.log(\"customer for referance is\");\r\n            console.log(this.customers);\r\n        });\r\n    }   \r\n\r\n\r\n    showToast() {\r\n        // Get the snackbar DIV\r\n        var x = document.getElementById(\"snackbar\")\r\n    \r\n        // Add the \"show\" class to DIV\r\n        x.className = \"show\";\r\n    \r\n        // After 3 seconds, remove the show class from DIV\r\n        setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n    }\r\n\r\n    onChange(_id:string):void\r\n    {\r\n        console.log(\"CHange is Clicked\"+_id);\r\n        this.newMeasurement.CustomerId=_id;\r\n        $(\"#selectType\").show();\r\n    }\r\n\r\n\r\n    allFalse(){\r\n\r\n        this.Sherwani = false;\r\n        this.WaistCoat=false;\r\n        this.Coat = false;\r\n        this.ShalwarKameez = false;\r\n        this.Pant = false;\r\n        this.Trouser  = false; \r\n     \r\n    }\r\n\r\n    getForms(elem){\r\n        console.log(elem);\r\n\r\n        if(elem == \"Shalwar Kameez\"){\r\n\r\n            this.allFalse();\r\n            this.ShalwarKameez = true;\r\n          \r\n        }else if(elem == \"Coat\"){\r\n            this.allFalse();\r\n            this.Coat = true;\r\n        }else if(elem == \"Sherwani\"){\r\n            this.allFalse();\r\n            this.Sherwani = true;\r\n        }else if(elem == \"Waist Coat\"){\r\n            this.allFalse();\r\n            this.WaistCoat = true;\r\n        }else if(elem == \"Pant\"){\r\n            this.allFalse();\r\n            this.Pant = true;\r\n        }else{\r\n            this.allFalse();\r\n            this.Trouser = true;\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newMeasurement = new Measurement();\r\n      }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/customers/customerMeasurementForm.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CustomerMeasurementForm } from './customerMeasurementForm.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: CustomerMeasurementForm, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomerMeasurementForm\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class CustomerMeasurementFormModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/customers/customerMeasurementForm.module.ts","    \r\n\r\n    export class Measurement {\r\n        _id: string;\r\n        MeasurementTakenBy: string;\r\n        CustomerId: string;\r\n        Inside: number;\r\n        PentBottom: number;\r\n        Knee: number;\r\n        CoatLength: number;\r\n        Cb: number;\r\n        Hb: number;\r\n        ShalwarKameezBottom: number;\r\n        SLength: number;\r\n        Bysep: number;\r\n        Neck: number;\r\n        Shoulder: number;\r\n        Sleeve: number;\r\n        Hip: number;\r\n        Waist: number;\r\n        Chest: number;\r\n        ShalwarKameezLength: number;\r\n        __v: number;\r\n        TrouserInside?: number;\r\n        TrouserBottom?: number;\r\n        TrouserKnee?: number;\r\n        TrouserLength?: number;\r\n        TrouserHip?: number;\r\n        TrouserWaist?: number;\r\n        PentInside?: number;\r\n        PentKnee?: number;\r\n        PentLength?: number;\r\n        PentHip?: number;\r\n        PentWaist?: number;\r\n        WaistCoatCB?: number;\r\n        WaistCoatHB?: number;\r\n        WaistCoatNeck?: number;\r\n        WaistCoatShoulder?: number;\r\n        WaistCoatHip?: number;\r\n        WaistCoatWaist?: number;\r\n        WaistCoatChest?: number;\r\n        WaistCoatLength?: number;\r\n        SherwaniBottom?: number;\r\n        SherwaniHB?:number;\r\n        SherwaniCB?: number;\r\n        SherwaniBysep?: number;\r\n        SherwaniNeck?: number;\r\n        SherwaniShoulder?: number;\r\n        SherwaniSleeve?: number;\r\n        SherwaniHip?: number;\r\n        SherwaniWaist?: number;\r\n        SherwaniChest?: number;\r\n        SherwaniLength?: number;\r\n        CoatCB?: number;\r\n        CoatHB?: number;\r\n        CoatBysep?: number;\r\n        CoatNeck?: number;\r\n        CoatShoulder?: number;\r\n        CoatSleeve?: number;\r\n        CoatHip?: number;\r\n        CoatWaist?: number;\r\n        CoatChest?: number;\r\n        ShalwarKameezSLength?: number;\r\n        ShalwarKameezBysep?: number;\r\n        ShalwarKameezNeck?: number;\r\n        ShalwarKameezShoulder?: number;\r\n        ShalwarKameezSleeve?: number;\r\n        ShalwarKameezHip?: number;\r\n        ShalwarKameezWaist?: number;\r\n        ShalwarKameezChest?: number;\r\n    }\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/models/measurement.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\nimport { Customer } from './../models/customer';\r\nimport { CustomerResponse } from './../models/customerResponse';\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n   // private _addCustomerURL = 'http://localhost:3100/customers/addCustomer';\r\n    private _addCustomerURL = \"https://ssbotique.herokuapp.com/customers/addCustomer\";\r\n    private _getAllCustomersURL = 'https://ssbotique.herokuapp.com/customers/getAllCustomers';\r\n    private getCustomersByContactNumberURL = 'https://ssbotique.herokuapp.com/customers/getCustomerAndReferancesByContactNumber?ContactNumber=';\r\n    constructor(private _http: Http) { }\r\n\r\n\r\n    public addCustomer(customer: Customer) {\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this._http.post(this._addCustomerURL, customer, options)\r\n        .map(res => res.json());\r\n    }\r\n    \r\n    public getAllCustomers(): Observable<CustomerResponse> {\r\n        return this._http.get(this._getAllCustomersURL)\r\n         .map((response: Response) => <CustomerResponse> response.json())\r\n         .do(data => console.log(JSON.stringify(data)));\r\n     }\r\n\r\n    public getCustomersByContactNumber(contactNumber:string): Observable<CustomerResponse> {\r\n        return this._http.get(this.getCustomersByContactNumberURL+contactNumber)\r\n         .map((response: Response) => <CustomerResponse> response.json())\r\n         .do(data => console.log(JSON.stringify(data)));\r\n     }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        console.log(\"Extract Data\");\r\n        console.log(body);\r\n        return body.data || {};\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/services/customer.Service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\nimport { Measurement } from './../models/measurement';\r\nimport {Server} from './../utilities/Server';\r\n\r\n@Injectable()\r\nexport class MeasurementService {\r\n\r\n    private _addMeasurmentURL = 'customers/addMeasurement';\r\n    private baseURL:String ;\r\n    constructor(private _http: Http) {\r\n        var server = new Server();\r\n        this.baseURL = server.getServerURL();\r\n     }\r\n\r\n    public addMeasurement(measurement: Measurement){\r\n        console.log(\"Add Measurement is called in Service\");\r\n        console.log(measurement);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this._http.post(this.baseURL + this._addMeasurmentURL, measurement, options)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        console.log(\"Extract Data\");\r\n        console.log(body);\r\n        return body.data || {};\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/services/measurement.Service.ts","export  class Server\r\n{\r\n    public getServerURL():string\r\n    {\r\n       // return \"http://localhost:3100/\";\r\n       return \"https://ssbotique.herokuapp.com/\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/utilities/Server.ts"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/GA;;;;;;;ACAA;;;;;;;;;ACAA;AAEA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AApHA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAiHA;;AAAA;AA/GA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;;;ACrBA;AAAA;AAoEA;AAAA;AAAA;AApEA;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AAKA;AAMA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;;AAAA;AAoCA;;AAAA;AAnCA;;;;;;;;;;ACVA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAIA;AAAA;AAFA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;;AAAA;AA0BA;;AAAA;AAzBA;;;;;;;;;;ACVA;AAAA;AAOA;AALA;AAEA;AACA;AACA;AACA;AAAA;AAPA;;;;;","sourceRoot":""}